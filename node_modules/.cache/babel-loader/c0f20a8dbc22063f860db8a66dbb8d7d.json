{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udacity\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\component\\\\SearchBooks.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from '..//BooksAPI';\nimport useQuery from '..//hooks/useQuery';\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBooks({\n  location\n}) {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [mapOfIdToBooks, setMapOfIdToBooks] = useState(new Map());\n  const [query, setQuery] = useState(\"\");\n  const [searchBooks, setSearchBooks] = useQuery(query);\n  const [mergedBooks, setMergedBooks] = useState([]);\n  useEffect(() => {\n    BooksAPI.getAll().then(data => {\n      setBooks(data);\n      setMapOfIdToBooks(createMapOfBooks(data));\n    });\n  }, []);\n  useEffect(() => {\n    const combined = searchBooks.map(book => {\n      if (mapOfIdToBooks.has(book.id)) {\n        return mapOfIdToBooks.get(book.id);\n      } else {\n        return book;\n      }\n    });\n    setMergedBooks(combined);\n  }, [searchBooks]);\n  const createMapOfBooks = books => {\n    const map = new Map();\n    books.map(book => map.set(book.id, book));\n    return map;\n  };\n  const changeShelf = (book, whereTo) => {\n    const updatedBooks = books.map(b => {\n      if (b.id === book.id) {\n        book.shelf = whereTo;\n        return book;\n      }\n      return b;\n    });\n    if (!mapOfIdToBooks.has(book.id)) {\n      book.shelf = whereTo;\n      updatedBooks.push(book);\n    }\n    setBooks(updatedBooks);\n    BooksAPI.update(book, whereTo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Search by title, author, or ISBN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: mergedBooks.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Book, {\n            book: b,\n            changeBookShelf: updateBookShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this)\n        }, b.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchBooks, \"oh4U5FAyZGoy1xRt3tav60Nm66o=\", false, function () {\n  return [useQuery];\n});\n_c = SearchBooks;\n;\nexport default SearchBooks;\nvar _c;\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"names":["useEffect","useState","Link","BooksAPI","useQuery","Book","jsxDEV","_jsxDEV","SearchBooks","location","_s","books","setBooks","mapOfIdToBooks","setMapOfIdToBooks","Map","query","setQuery","searchBooks","setSearchBooks","mergedBooks","setMergedBooks","getAll","then","data","createMapOfBooks","combined","map","book","has","id","get","set","changeShelf","whereTo","updatedBooks","b","shelf","push","update","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","changeBookShelf","updateBookShelf","_c","$RefreshReg$"],"sources":["D:/Udacity/nd0191-c1-myreads/starter/src/component/SearchBooks.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from '..//BooksAPI';\nimport useQuery from '..//hooks/useQuery';\nimport Book from \"./Book\";\n\nfunction SearchBooks({location}) {\n  const [books, setBooks] = useState([])\n  const [mapOfIdToBooks, setMapOfIdToBooks] = useState(new Map());\n\n  const [query, setQuery] = useState(\"\");\n  const [searchBooks, setSearchBooks] = useQuery(query);\n  const [mergedBooks, setMergedBooks] = useState([]);\n\n  useEffect(() => {\n\n    BooksAPI.getAll()\n      .then(data => {\n        setBooks(data)\n        setMapOfIdToBooks(createMapOfBooks(data))\n      }\n      );\n  }, [])\n\n\n  useEffect(() => {\n\n    const combined = searchBooks.map(book => {\n      if (mapOfIdToBooks.has(book.id)) {\n        return mapOfIdToBooks.get(book.id);\n      } else {\n        return book;\n      }\n    })\n    setMergedBooks(combined);\n  }, [searchBooks])\n\n\n  const createMapOfBooks = (books) => {\n    const map = new Map();\n    books.map(book => map.set(book.id, book));\n    return map;\n  }\n\n  const changeShelf = (book, whereTo) => {\n    const updatedBooks = books.map(b => {\n      if (b.id === book.id) {\n        book.shelf = whereTo;\n        return book;\n      }\n      return b;\n    })\n    if (!mapOfIdToBooks.has(book.id)) {\n      book.shelf = whereTo;\n      updatedBooks.push(book)\n    }\n    setBooks(updatedBooks);\n    BooksAPI.update(book, whereTo);\n  }\n\n    return (\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link className=\"close-search\" to=\"/\">\n            Close\n            </Link>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                value={query} onChange={(e) => setQuery(e.target.value)}\n                placeholder=\"Search by title, author, or ISBN\"\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            <ol className=\"books-grid\">\n                  {mergedBooks.map(b => (\n                    <li key={b.id}>\n                      <Book book={b} changeBookShelf={updateBookShelf} />\n                    </li>\n                  ))}\n            </ol>\n          </div>\n        </div>\n    );\n};\n\nexport default SearchBooks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}