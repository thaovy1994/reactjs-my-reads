{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udacity\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\component\\\\BookShelf.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport Shelf from './Shelf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookShelf = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [mapOfIdToBooks, setMapOfIdToBooks] = useState(new Map());\n  const [query, setQuery] = useState(\"\");\n  const [searchBooks, setSearchBooks] = useQuery(query);\n  const [mergedBooks, setMergedBooks] = useState([]);\n  useEffect(() => {\n    BooksAPI.getAll().then(data => {\n      setBooks(data);\n      setMapOfIdToBooks(createMapOfBooks(data));\n    });\n  }, []);\n  useEffect(() => {\n    const combined = searchBooks.map(book => {\n      if (mapOfIdToBooks.has(book.id)) {\n        return mapOfIdToBooks.get(book.id);\n      } else {\n        return book;\n      }\n    });\n    setMergedBooks(combined);\n  }, [searchBooks]);\n  const createMapOfBooks = books => {\n    const map = new Map();\n    books.map(book => map.set(book.id, book));\n    return map;\n  };\n  const updateBookShelf = (book, whereTo) => {\n    const updatedBooks = books.map(b => {\n      if (b.id === book.id) {\n        book.shelf = whereTo;\n        return book;\n      }\n      return b;\n    });\n    if (!mapOfIdToBooks.has(book.id)) {\n      book.shelf = whereTo;\n      updatedBooks.push(book);\n    }\n    setBooks(updatedBooks);\n    BooksAPI.update(book, whereTo);\n  };\n\n  // const compartments = [\n  //   { type: \"currentlyReading\", title: \"Currently Reading\" },\n  //   { type: \"wantToRead\", title: \"Want to Read\" },\n  //   { type: \"read\", title: \"Read\" },\n  // ];\n\n  const currentlyReading = books.filter(book => book.shelf === \"currentlyReading\");\n  const whatToRead = books.filter(book => book.shelf === \"wantToRead\");\n  const read = books.filter(book => book.shelf === \"read\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: books.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Shelf, {\n            title: \"Currently Reading\",\n            books: currentlyReading,\n            updateBookShelf: updateBookShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Shelf, {\n            title: \"Want To Read\",\n            books: whatToRead,\n            updateBookShelf: updateBookShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Shelf, {\n            title: \"Read\",\n            books: read,\n            updateBookShelf: updateBookShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(BookShelf, \"oh4U5FAyZGoy1xRt3tav60Nm66o=\", true);\n_c = BookShelf;\nexport default BookShelf;\nvar _c;\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"names":["useEffect","useState","Link","BooksAPI","Shelf","jsxDEV","_jsxDEV","BookShelf","_s","books","setBooks","mapOfIdToBooks","setMapOfIdToBooks","Map","query","setQuery","searchBooks","setSearchBooks","useQuery","mergedBooks","setMergedBooks","getAll","then","data","createMapOfBooks","combined","map","book","has","id","get","set","updateBookShelf","whereTo","updatedBooks","b","shelf","push","update","currentlyReading","filter","whatToRead","read","className","children","length","title","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["D:/Udacity/nd0191-c1-myreads/starter/src/component/BookShelf.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport Shelf from './Shelf';\n\nconst BookShelf = () => {\n    const [books, setBooks] = useState([]);\n    const [mapOfIdToBooks, setMapOfIdToBooks] = useState(new Map());\n    const [query, setQuery] = useState(\"\");\n    const [searchBooks, setSearchBooks] = useQuery(query);\n    const [mergedBooks, setMergedBooks] = useState([]);\n\n    useEffect(() => {\n\n      BooksAPI.getAll()\n        .then(data => {\n          setBooks(data)\n          setMapOfIdToBooks(createMapOfBooks(data))\n        }\n        );\n    }, [])\n  \n  \n    useEffect(() => {\n  \n      const combined = searchBooks.map(book => {\n        if (mapOfIdToBooks.has(book.id)) {\n          return mapOfIdToBooks.get(book.id);\n        } else {\n          return book;\n        }\n      })\n      setMergedBooks(combined);\n    }, [searchBooks])\n  \n  \n    const createMapOfBooks = (books) => {\n      const map = new Map();\n      books.map(book => map.set(book.id, book));\n      return map;\n    }\n  \n    const updateBookShelf = (book, whereTo) => {\n      const updatedBooks = books.map(b => {\n        if (b.id === book.id) {\n          book.shelf = whereTo;\n          return book;\n        }\n        return b;\n      })\n      if (!mapOfIdToBooks.has(book.id)) {\n        book.shelf = whereTo;\n        updatedBooks.push(book)\n      }\n      setBooks(updatedBooks);\n      BooksAPI.update(book, whereTo);\n    }\n  \n    // const compartments = [\n    //   { type: \"currentlyReading\", title: \"Currently Reading\" },\n    //   { type: \"wantToRead\", title: \"Want to Read\" },\n    //   { type: \"read\", title: \"Read\" },\n    // ];\n\n    const currentlyReading = books.filter((book) => book.shelf === \"currentlyReading\");\n    const whatToRead = books.filter((book) => book.shelf === \"wantToRead\");\n    const read = books.filter((book) => book.shelf === \"read\");\n    \nreturn (\n    <div className=\"app\">\n        <div className=\"list-books\">\n           <div className=\"list-books-content\">\n           {books.length > 0 && (\n          <div>\n            {/* {compartments.map((compartment, index) => {\n              const compartmentBooks = books.filter(\n                (book) => book.shelf === compartment.type\n              );\n              return (\n                <div className=\"bookshelf\" key={index}>\n                  <h2 className=\"bookshelf-title\">{compartment.title}</h2>\n                  <div>\n                    <div className=\"bookshelf-books\" key={compartment}>\n                      <ol className=\"books-grid\">\n                        {compartmentBooks.map((book) => (\n                          <Book key={book.id} book={book} changeShelf={changeShelf} />\n                        ))}\n                      </ol>\n                    </div>\n                  </div>\n                </div>\n              );\n            })} */}\n            <Shelf title=\"Currently Reading\" books={currentlyReading} updateBookShelf={updateBookShelf}/>\n            <Shelf title=\"Want To Read\" books={whatToRead} updateBookShelf={updateBookShelf}/>\n            <Shelf title=\"Read\" books={read} updateBookShelf={updateBookShelf}/>\n          </div>\n        )}\n           </div>\n           <div className=\"open-search\">\n            {/* <Link to={{\n                pathname: '/search',\n                state: {\n                  currentBooks: books\n                }\n            }}\n            /> */}\n            <Link to=\"/search\">\n            </Link>\n          </div>\n        </div>\n    </div>\n    );\n}\n\nexport default BookShelf;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}