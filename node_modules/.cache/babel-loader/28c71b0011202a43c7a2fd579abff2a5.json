{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udacity\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\BookShelf.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./App.css\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookShelf = () => {\n  _s();\n  const [shelf, setShelf] = useState('none');\n  const [books, setBooks] = useState([\n    // {\n    //   id: 1,\n    //   title: \"To Kill a Mockingbird\",\n    //   author: \"Harper Lee\",\n    //   shelf: \"currentlyReading\",\n    //   imageUrl: \"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\"\n    // },\n    // {\n    //   id: 2,\n    //   title: \"Ender's Game\",\n    //   author: \"Orson Scott Card\",\n    //   shelf: \"currentlyReading\",\n    //   imageUrl: \"http://books.google.com/books/content?id=yDtCuFHXbAYC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72RRiTR6U5OUg3IY_LpHTL2NztVWAuZYNFE8dUuC0VlYabeyegLzpAnDPeWxE6RHi0C2ehrR9Gv20LH2dtjpbcUcs8YnH5VCCAH0Y2ICaKOTvrZTCObQbsfp4UbDqQyGISCZfGN&source=gbs_api\"\n    // },\n    // {\n    //   id: 3,\n    //   title: \"1776\",\n    //   author: \"David McCullough\",\n    //   shelf: \"wantToRead\",\n    //   imageUrl: \"http://books.google.com/books/content?id=uu1mC6zWNTwC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73pGHfBNSsJG9Y8kRBpmLUft9O4BfItHioHolWNKOdLavw-SLcXADy3CPAfJ0_qMb18RmCa7Ds1cTdpM3dxAGJs8zfCfm8c6ggBIjzKT7XR5FIB53HHOhnsT7a0Cc-PpneWq9zX&source=gbs_api\"\n    // },\n    // {\n    //   id: 4,\n    //   title: \"Harry Potter and the Sorcerer's Stone\",\n    //   author: \"J.K. Rowling\",\n    //   shelf: \"wantToRead\",\n    //   imageUrl: \"http://books.google.com/books/content?id=wrOQLV6xB-wC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72G3gA5A-Ka8XjOZGDFLAoUeMQBqZ9y-LCspZ2dzJTugcOcJ4C7FP0tDA8s1h9f480ISXuvYhA_ZpdvRArUL-mZyD4WW7CHyEqHYq9D3kGnrZCNiqxSRhry8TiFDCMWP61ujflB&source=gbs_api\"\n    // },\n    // {\n    //   id: 5,\n    //   title: \"The Hobbit\",\n    //   author: \"J.R.R. Tolkien\",\n    //   shelf: \"read\",\n    //   imageUrl: \"http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api\"\n    // },\n    // {\n    //   id: 6,\n    //   title: \"Oh, the Places You'll Go!\",\n    //   author: \"Seuss\",\n    //   shelf: \"read\",\n    //   imageUrl: \"http://books.google.com/books/content?id=1q_xAwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE712CA0cBYP8VKbEcIVEuFJRdX1k30rjLM29Y-dw_qU1urEZ2cQ42La3Jkw6KmzMmXIoLTr50SWTpw6VOGq1leINsnTdLc_S5a5sn9Hao2t5YT7Ax1RqtQDiPNHIyXP46Rrw3aL8&source=gbs_api\"\n    // },\n    // {\n    //   id: 7,\n    //   title: \"The Adventures of Tom Sawyer\",\n    //   author: \"Mark Twain\",\n    //   shelf: \"read\",\n    //   imageUrl: \"http://books.google.com/books/content?id=32haAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72yckZ5f5bDFVIf7BGPbjA0KYYtlQ__nWB-hI_YZmZ-fScYwFy4O_fWOcPwf-pgv3pPQNJP_sT5J_xOUciD8WaKmevh1rUR-1jk7g1aCD_KeJaOpjVu0cm_11BBIUXdxbFkVMdi&source=gbs_api\"\n    // },\n  ]);\n  useEffect(() => {\n    BooksAPI.getAll().then(books => {\n      setBooks(books);\n    });\n  }, []);\n\n  // const arrangeBook = (event) => {\n  //     const selectShelf = event.target.value;\n  //     setShelf(selectShelf);\n  //     console.log(selectShelf);\n  //     const updatedBooks = books.map(book => {\n  //       if (selectShelf === book.shelf) {\n  //           return book;\n  //       } else {\n  //           return { ...book, shelf: selectShelf };\n  //       }\n  //   });\n  //   setBooks(updatedBooks);\n  //   }\n\n  const changeShelf = (book, newShelf) => {\n    BooksAPI.update(book, newShelf).then(() => {\n      book.shelf = newShelf;\n      setBooks(prevBooks => prevBooks.filter(b => b.id !== book.id).concat([book]));\n    });\n  };\n\n  //Book shelf titles\n  const compartments = [{\n    type: \"currentlyReading\",\n    title: \"In Progress\"\n  }, {\n    type: \"wantToRead\",\n    title: \"Next Up\"\n  }, {\n    type: \"read\",\n    title: \"Completed\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: books.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: compartments.map((compartment, index) => {\n            const compartmentBooks = books.filter(book => book.shelf === compartment.type);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bookshelf\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"bookshelf-title\",\n                children: compartment.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ShelfSection, {\n                books: compartmentBooks,\n                compartmentsList: compartments,\n                changeShelf: changeShelf\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/search',\n            state: {\n              currentBooks: books\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(BookShelf, \"g4oFhkLsURK1OGaBGdGZVJR5trs=\");\n_c = BookShelf;\nexport default BookShelf;\nvar _c;\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"names":["useEffect","useState","Link","BooksAPI","jsxDEV","_jsxDEV","BookShelf","_s","shelf","setShelf","books","setBooks","getAll","then","changeShelf","book","newShelf","update","prevBooks","filter","b","id","concat","compartments","type","title","className","children","length","map","compartment","index","compartmentBooks","fileName","_jsxFileName","lineNumber","columnNumber","ShelfSection","compartmentsList","to","pathname","state","currentBooks","_c","$RefreshReg$"],"sources":["D:/Udacity/nd0191-c1-myreads/starter/src/BookShelf.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./App.css\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nconst BookShelf = () => {\n    const[shelf , setShelf ] = useState('none');\n    const [books, setBooks] = useState([\n      // {\n      //   id: 1,\n      //   title: \"To Kill a Mockingbird\",\n      //   author: \"Harper Lee\",\n      //   shelf: \"currentlyReading\",\n      //   imageUrl: \"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\"\n      // },\n      // {\n      //   id: 2,\n      //   title: \"Ender's Game\",\n      //   author: \"Orson Scott Card\",\n      //   shelf: \"currentlyReading\",\n      //   imageUrl: \"http://books.google.com/books/content?id=yDtCuFHXbAYC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72RRiTR6U5OUg3IY_LpHTL2NztVWAuZYNFE8dUuC0VlYabeyegLzpAnDPeWxE6RHi0C2ehrR9Gv20LH2dtjpbcUcs8YnH5VCCAH0Y2ICaKOTvrZTCObQbsfp4UbDqQyGISCZfGN&source=gbs_api\"\n      // },\n      // {\n      //   id: 3,\n      //   title: \"1776\",\n      //   author: \"David McCullough\",\n      //   shelf: \"wantToRead\",\n      //   imageUrl: \"http://books.google.com/books/content?id=uu1mC6zWNTwC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73pGHfBNSsJG9Y8kRBpmLUft9O4BfItHioHolWNKOdLavw-SLcXADy3CPAfJ0_qMb18RmCa7Ds1cTdpM3dxAGJs8zfCfm8c6ggBIjzKT7XR5FIB53HHOhnsT7a0Cc-PpneWq9zX&source=gbs_api\"\n      // },\n      // {\n      //   id: 4,\n      //   title: \"Harry Potter and the Sorcerer's Stone\",\n      //   author: \"J.K. Rowling\",\n      //   shelf: \"wantToRead\",\n      //   imageUrl: \"http://books.google.com/books/content?id=wrOQLV6xB-wC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72G3gA5A-Ka8XjOZGDFLAoUeMQBqZ9y-LCspZ2dzJTugcOcJ4C7FP0tDA8s1h9f480ISXuvYhA_ZpdvRArUL-mZyD4WW7CHyEqHYq9D3kGnrZCNiqxSRhry8TiFDCMWP61ujflB&source=gbs_api\"\n      // },\n      // {\n      //   id: 5,\n      //   title: \"The Hobbit\",\n      //   author: \"J.R.R. Tolkien\",\n      //   shelf: \"read\",\n      //   imageUrl: \"http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api\"\n      // },\n      // {\n      //   id: 6,\n      //   title: \"Oh, the Places You'll Go!\",\n      //   author: \"Seuss\",\n      //   shelf: \"read\",\n      //   imageUrl: \"http://books.google.com/books/content?id=1q_xAwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE712CA0cBYP8VKbEcIVEuFJRdX1k30rjLM29Y-dw_qU1urEZ2cQ42La3Jkw6KmzMmXIoLTr50SWTpw6VOGq1leINsnTdLc_S5a5sn9Hao2t5YT7Ax1RqtQDiPNHIyXP46Rrw3aL8&source=gbs_api\"\n      // },\n      // {\n      //   id: 7,\n      //   title: \"The Adventures of Tom Sawyer\",\n      //   author: \"Mark Twain\",\n      //   shelf: \"read\",\n      //   imageUrl: \"http://books.google.com/books/content?id=32haAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72yckZ5f5bDFVIf7BGPbjA0KYYtlQ__nWB-hI_YZmZ-fScYwFy4O_fWOcPwf-pgv3pPQNJP_sT5J_xOUciD8WaKmevh1rUR-1jk7g1aCD_KeJaOpjVu0cm_11BBIUXdxbFkVMdi&source=gbs_api\"\n      // },\n    ]);\n\n    useEffect(() => {\n      BooksAPI.getAll().then((books) => {\n        setBooks(books);\n      });\n    }, []);\n\n    // const arrangeBook = (event) => {\n    //     const selectShelf = event.target.value;\n    //     setShelf(selectShelf);\n    //     console.log(selectShelf);\n    //     const updatedBooks = books.map(book => {\n    //       if (selectShelf === book.shelf) {\n    //           return book;\n    //       } else {\n    //           return { ...book, shelf: selectShelf };\n    //       }\n    //   });\n    //   setBooks(updatedBooks);\n    //   }\n\n    const changeShelf = (book, newShelf) => {\n      BooksAPI.update(book, newShelf).then(() => {\n        book.shelf = newShelf;\n        setBooks((prevBooks) =>\n          prevBooks.filter((b) => b.id !== book.id).concat([book])\n        );\n      });\n    };\n  \n    //Book shelf titles\n    const compartments = [\n      { type: \"currentlyReading\", title: \"In Progress\" },\n      { type: \"wantToRead\", title: \"Next Up\" },\n      { type: \"read\", title: \"Completed\" },\n    ];\n    \nreturn (\n    <div className=\"app\">\n        <div className=\"list-books\">\n           <div className=\"list-books-content\">\n           {books.length > 0 && (\n          <div>\n            {compartments.map((compartment, index) => {\n              const compartmentBooks = books.filter(\n                (book) => book.shelf === compartment.type\n              );\n              return (\n                <div className=\"bookshelf\" key={index}>\n                  <h2 className=\"bookshelf-title\">{compartment.title}</h2>\n                  <ShelfSection\n                    key={index}\n                    books={compartmentBooks}\n                    compartmentsList={compartments}\n                    changeShelf={changeShelf}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        )}\n              {/* <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                  {books.map(book => (\n                  book.shelf === \"currentlyReading\" && (\n                    <li key={book.id}>\n                      <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div\n                            className=\"book-cover\"\n                            style={{\n                              width: 128,\n                              height: 193,\n                              backgroundImage:\n                              `url(${book.imageUrl})`\n                            }}\n                          ></div>\n                          <div className=\"book-shelf-changer\">\n                            <select value={shelf} onChange ={arrangeBook}>\n                              <option value=\"none\" disabled>\n                                Move to...\n                              </option>\n                              <option value=\"currentlyReading\">\n                                Currently Reading\n                              </option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">{book.title}</div>\n                        <div className=\"book-authors\">{book.author}</div>\n                      </div>\n                    </li>\n              )))}\n                  </ol>\n                </div>\n              </div>\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Want to Read</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                  {books.map(book => (\n                  book.shelf === \"wantToRead\" && (\n                    <li key={book.id}>\n                      <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div\n                            className=\"book-cover\"\n                            style={{\n                              width: 128,\n                              height: 193,\n                              backgroundImage:`url(${book.imageUrl})`,\n                            }}\n                          ></div>\n                          <div className=\"book-shelf-changer\">\n                            <select onChange ={arrangeBook}>\n                              <option value=\"none\" disabled>\n                                Move to...\n                              </option>\n                              <option value=\"currentlyReading\">\n                                Currently Reading\n                              </option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">{book.title}</div>\n                        <div className=\"book-authors\">{book.author}</div>\n                      </div>\n                    </li>\n                  )))}\n                  </ol>\n                </div>\n              </div>\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Read</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                  {books.map(book => (\n                    book.shelf === \"read\" && (\n                    <li key={book.id}>\n                      <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div\n                            className=\"book-cover\"\n                            style={{\n                              width: 128,\n                              height: 192,\n                              backgroundImage: `url(${book.imageUrl})`,\n                            }}\n                          ></div>\n                          <div className=\"book-shelf-changer\">\n                            <select value={shelf} onChange ={arrangeBook}>\n                              <option value=\"none\" disabled>\n                                Move to...\n                              </option>\n                              <option value=\"currentlyReading\">\n                                Currently Reading\n                              </option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">{book.title}</div>\n                        <div className=\"book-authors\">{book.author}</div>\n                      </div>\n                    </li>\n                  )))}\n                  </ol>\n                </div>\n              </div> */}\n           </div>\n           <div className=\"open-search\">\n            <Link to={{\n                pathname: '/search',\n                state: {\n                  currentBooks: books\n              }\n            }} />\n          </div>\n        </div>\n    </div>\n    );\n}\n\nexport default BookShelf;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}